You are an AI developer assistant. I want you to scaffold a full-stack, offline-capable AI-powered soil prediction system called **NeuraSoil** for the Africa Deep Tech Challenge 2025.

👨‍💻 This project is proudly built by **Abdulrahman Adisa Amuda** for submission to the **Africa Deep Tech Challenge 2025**.

🧠 Description:
NeuraSoil is an offline-first, edge-AI system that uses simulated sensors and lightweight machine learning models to help rural African farmers predict underground water movement, soil health, and crop suitability — all without needing internet access.

📦 Tech Stack:
- **Backend**: Python (FastAPI or Flask)
- **Edge AI**: TensorFlow Lite or ONNX (mock model if needed for Free Tier)
- **Frontend**: Vite + React + Tailwind CSS
- **Database**: Local JSON or SQLite
- **Device simulation**: Raspberry Pi or ESP32 (simulate sensors in dev)
- **Comms**: Local-only dashboard + mock SMS system (print alerts or simulate with logs)

🚀 Core Features to Scaffold:
1. Simulated soil sensors (moisture, PH, temperature, pressure)
2. ML prediction logic (offline or mock): e.g. classify soil stability or underground water shifts
3. FastAPI/Flask backend with:
   - Endpoints to receive and store sensor data
   - Endpoint to trigger and return prediction
4. React dashboard for farmers to:
   - View live soil stats and alerts
   - View past prediction logs (chart/table)
5. Admin dashboard with simple soil health history
6. Alert system that simulates SMS notifications (e.g., console log or print: “⚠️ Erosion risk detected”)

🧾 Console Output Requirements:
- On app startup:  
  `🌱 NeuraSoil by Abdulrahman Adisa Amuda – Africa Deep Tech 2025 started successfully.`
- When a prediction runs:  
  `✅ Prediction made: [soil status result]`

📁 Suggested Folder Structure:
- `/backend` – API, prediction logic, data handling
- `/frontend` – React farmer dashboard
- `/ml` – Placeholder or small simulated model
- `/simulator` – Fake soil sensor generator

🔒 Must be:
- Fully offline-capable (simulate if needed)
- Lightweight enough for Replit Free Tier (≤ 512MB RAM)
- Modular, scalable, and easy to extend later
- Clean, professional structure
- No unnecessary UI boilerplate

✅ Project Identity:
- Console logs and UI should display:  
  `🌱 Built by Abdulrahman Adisa Amuda – Africa Deep Tech 2025`

Start by building the scaffold and explain briefly what’s built and what’s next.

📛 Project Name: `NeuraSoil`